name: Merge Releases

on:
  push:
    branches: [ master ]
  #manual trigger button
  workflow_dispatch:

defaults:
  run:
    shell: bash
env:
  PROJECT_NAME: SupaStuff_Plugins

jobs:
  download:
    strategy:
      matrix:
        plugin:
          - TheFlash
          - GamepadHook
          - HUDToggler
          - LockOn2MapPin
          - ReturnTimer
    runs-on: ubuntu-latest
    steps:

    - name: Download ${{ matrix.plugin }} Release
      env:
        plugin: ${{ matrix.plugin }}
      run: |
        curl -L https://github.com/Stuff-Mods/MHW-${plugin}/releases/latest/download/${plugin}.zip -o ${plugin}.zip
        curl -L https://raw.githubusercontent.com/Stuff-Mods/MHW-${plugin}/master/addresses.yaml -o ${plugin}.yaml

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.plugin }} Zip
        path: |
          ./*.zip
          ./*.yaml
          !./addresses.yaml
  
  merge:
    needs: download
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install script dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r scripts/requirements.txt

    - name: Merge yaml files
      run: |
        find -name '*.yaml' -not -path '*/\.*' -exec mv -i -- {} . \;
        grep -l 404 *.yaml | xargs rm
        python scripts/merge-yaml.py *.yaml addresses.yaml > addresses.yml
        mv addresses.yml addresses.yaml
      
    - name: Commit yaml if changed
      run: |
        if [ -n "$(git diff --numstat)" ]
        then
          git config user.name "Github Actions"
          git config user.email action@github.com
          git commit -am "added new addresses"
          git push origin master
        else
          echo "No new addresses"
        fi
    
    - name: Merge zips
      run: |
        find -name '*.zip' -exec mv -i -- {} . \;
        unzip -n "*.zip"
        cp addresses.* nativePC/plugins/config
        zip $PROJECT_NAME.zip -r nativePC/ licenses/ *.dll

    - name: Create release with binaries
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        version=$GITHUB_RUN_NUMBER-$(date +%F)
        gh release create $version -t "$version" \
           $PROJECT_NAME.zip \
           addresses.*
