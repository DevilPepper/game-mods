name: Item Tracker CI

on:
  push:
    branches: [ master ]

env:
  Project_Name: MHWItemBoxTracker

defaults:
  run:
    shell: bash

jobs:
  interrupt:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  version:
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-latest

    outputs:
      git_tag: ${{ steps.set_vars.outputs.git_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - uses: actions/setup-node@v2

    - id: set_vars
      run: |
        bump=$(npx standard-version --dry-run | grep -o "\[.*\]")
        bump=${bump#[}
        bump=${bump%]}

        echo "git_tag=$bump" >> $GITHUB_ENV
        echo "::set-output name=git_tag::$bump"

  build:
    needs: version
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the applications
      shell: pwsh
      run: |
        cp .github/NuGet.Config .
        msbuild -m /t:Restore
      env:
        Configuration: ${{ matrix.configuration }}
        NUGET_USERNAME: ${{ github.repository_owner }}
        NUGET_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the apps
      shell: pwsh
      run: |
        $version="$env:git_tag.0"
        msbuild -m /p:"Configuration=$env:Configuration,AssemblyVersionNumber=$version"
      env:
        Configuration: ${{ matrix.configuration }}
        git_tag: ${{ needs.version.outputs.git_tag }}
        
    - name: Generate JSON
      if: matrix.configuration == 'Release'
      run: |
        nuget install Microsoft.Net.Compilers.Toolset -OutputDirectory packages -Version 3.9.0-2.final
        CSI="packages/Microsoft.Net.Compilers.Toolset.3.9.0-2.final/tasks/net472/csi.exe"

        # copy dlls for scripts to use
        cp ${Project_Name}/bin/Release/*.dll scripts/
        
        $CSI scripts/gen-json-schema.csx
        $CSI scripts/gen-module-json.csx
        $CSI scripts/gen-settings-json.csx
      env:
        NUGET_USERNAME: ${{ github.repository_owner }}
        NUGET_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  
    # Upload the builds for next job and debugging
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        # Don't know if this should be unique to the tag/branch/PR
        name: Item Tracker Plugin for Hunter Pie ${{ matrix.configuration }}
        path: ./**/bin/*

  publish:
    needs: [version, build]
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-node@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: Item Tracker Plugin for Hunter Pie Release
    
    - name: Update changelog and bump version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npx standard-version
        git push --follow-tags origin master

    - name: Zip it
      run: |
        mkdir -p Modules/ItemBoxTracker
        RELEASE_DIR="${Project_Name}/bin/Release"
        mv ${RELEASE_DIR}/${Project_Name}.dll \
           ${RELEASE_DIR}/config.schema.json \
           ${RELEASE_DIR}/module.json \
           ${RELEASE_DIR}/settings.json \
           Modules/ItemBoxTracker
        zip ItemBoxTracker.zip -r Modules

    - name: Create release with binaries
      run: |
        gh release create v$GIT_TAG -t "Release v$GIT_TAG" \
           ItemBoxTracker.zip \
           Modules/ItemBoxTracker/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_TAG: ${{ needs.version.outputs.git_tag }}
